Bắt đầu thực hiện lúc 9h ngày 10/10/2022
/////////////////////////////////////////////////////////////////////////////////
NẾU DỰ ÁN YÊU CẦU BỔ SUNG THÊM BIẾN THÌ TỪ ĐẦU CODE WEB PHẢI CŨNG PHẢI CHỪA SẴN THEO THỨ TỰ TRONG TIA,
HOẶC PHẢI THÊM BIẾN VÀO PHÍA SAU
VÍ DỤ cảm biến 1   i1.0
      cảm biến 2   i 1.1
      cảm biến dự phòng i.2
thì trong code web chúng ta cũng phải gắn tag cho cảm biến dự phòng. Nếu không sau này chèn vào sẽ sửa toàn bộ 
code web
/////////////////////////////////////////////////////////////////
Nên xóa code trong file cũ rồi code đè lên để đỡ phải cài đặt lại các module, thư viện trong nodejs
//////////////////////////////////////////////////////
Nếu không thực hiện được lệnh ghi kiểm tra đã chọn localhost:3000 ở home.ejs hay chưa
/////////////////////////////////////////////////////////////////////////////////
Để chức năng symbol có thể hoạt động nhớ khai báo biến ở phần fn_tag

Lúc làm symbol nếu không chạy nhớ chú ý đến tốc độ nháy của symbol so với tốc độ phản hồi dữ liệu từ server với client
//////////////////////////////////////////////////////
Lưu ý lúc ghi dữ liệu vào SQL câu lệnh ghi dữ liệu cuối cùng sẽ khác với các câu lệnh còn lại:
 var Tocdodat = "'" + arr_tag_value[9] + "',"; // bình thường
 var Start = "'" + arr_tag_value[10] + "'"; // câu cuối

*số trong ngoặc vuông là thứ tự hiển thị của tag ở phần console( đếm từ 0)
/////////////////////////////////////////////////////////////////////////////////
Để ghi nhiều giá trị có tính chất khác nhau xuống PLC cần dùng hàm

io.on("connection", function(socket)
{
    // Ghi dữ liệu từ IO field
    socket.on("cmd_Main_Edit_Data", function(data){
        conn_plc.writeItems([
                            'Soluong', 'Tocdo', 'Tocdodat'],
                            [data[0],data[1],data[2] /// 0,1,2 là số thứ tự cần ghi chứ không phải số thứ tự tag trong bảng 
                        ], valuesWritten);  
        });
})

/////////////////////////////////////////////////////////////////////////////////
để đọc giá trị từ PLC lên ta dùng lệnh  sau đó lưu vào biến     socket.on("Timer",function(data){
       
       								var demthoigian = data;

    						 });
với Timer là tag mình cần đọc

\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
dữ liệu từ file js được tạo phải dùng socket để gưi đến file index chứ không dùng biến toàn cục được
vi dụ ở file js bình thường sẽ có lệnh gửi : socket.emit('Client-send-cmdyeucau', SLyeucau);
ở file index.js sẽ có lệnh nhận:socket.on("Client-send-cmdyeucau", function(data){
    SLyeucau =   data;   
});
Nếu truyền ngược lại thì đổi on với emit cho nhau
Client-send-cmdyeucau là mã bức điện và chúng phải trùng nhau

/////////////////////////////////////////////////////////////////////////////////

Để xuất báo cáo cần phải lọc dữ liệu, 
để lọc dữ liệu cần chọn chính xác ngày giờ nếu không bản xuất báo cáo sẽ bị lỗi không có dữ liệu
/////////////////////////////////////////////////////////////////////////////////
để đưa dữ liệu từ mysql vào chuỗi ta dùng     Soluong_chart_1.push(data[i].Soluong);
                    		              timer_chart_1.push(data[i].date_time);
/////////////////////////////////////////////////////////////////////////////////
lúc gọi dữ liệu vẽ biểu đồ, để tránh bị lặp cần dùng mảng trung gian 
để reset lại mãng mỗi khi thực hiện lại câu lệnh

ví dụ  timer_chart_1=[];
    Soluong_chart_1=[];
    Soluong_chart=Soluong_chart_1;
    timer_chart=timer_chart_1;
////////////////////////////////////////////////////////////////////////////////////////////////////////////
để tăng cao bảo mật ta phân quyền sử dụng cho từng user tạo sẵn. admin được truy cập tùy thích. user chỉ xem

////////////////////////////////////////////////////////////////////////////////////////////////////////////
debug trong nodejs phải cài npm install -g node-inspector chứ k phải chạy debug trong vscode.
/////////////////////////////////////////////////////////////////////////////////

Nếu dữ liệu quá lớn khiển trang web gặp vấn đề chậm khi tải, sử dụng lệnh sau để tăng dung lượng bộ nhớ may chủ:
 "scripts":{
     "start": "node --max-old-space-size=4076 server.js"
  } 
https://helpex.vn/question/node.js-het-bo-nho-608cbe229e3d535d51e88403 link thảm khảo
trong packet.json để tăng dung lượng máy chủ 
////////////////////////////////////////////////////////////////////////////////////////////////////////////
 Khi sửa lại dữ liệu trong bảng hiển thị ở web, muốn trong excel hiển thị 
thì phải sửa lại các giá trị ở function excel
 ////////////////////////////////////////////////////////////////////////////////////////////////////////////
Nếu web không hiển thị được bảng và báo lỗi fn_Table01_SQL_Show() is node define
 hãy kiểm tra lại phía trước có đặt nhầm biến
hay lỡ tay đè chạy chữ trong code hay không.
////////////////////////////////////////////////////////////////////////////////////////////////////////////
ĐỐi với vẽ biểu đồ chart.js quan trọng nhất là đưa được dữ liệu vào chuỗi.
 Nên đưa console xem chuỗi có bị chồng nhau không
//////////////////////////////////////////////////////////////////
Đối với plotly vẽ trạng thái cảm biến. Nếu muốn thêm line vào thì ở dưới cùng chardiv phải điền đúng số 
phẩn tử của mảng. Ví dụ vẽ 1 đường[0], 2 đường[0,1], 3 đường[0,1,2]
//////////////////////////////////////////////
13h ngày 11 tháng 10 đã hiển thị được trạng thái cảm biến, động cơ. Lưu dữ liệu vào được cơ sở dữ liệu.
Vẽ biểu đồ thể hiện trạng thái cảm biến, sản lượng trong tháng. Đọc ghi kiểu dữ liệu bất kì từ web vào plc
////////////////////////////////////////////////////////////////////////////////////////
Khi viết nhiều trang để phân quyền cho người dùng chúng ta có thể sử dụng lại cái thẻ id
////////////////////////////////////////////////////////////
code tạo biến trong javascript
 ///////code tạo biến trong hàm
  var taobien = 'value=150';
  eval(taobien);
 /////////////////////////////////
Để trỏ tới thuộc tính của ID ta dùng 

 const elementAfterSelector = document.querySelector(car_current);  

  left_current=elementAfterSelector.style.left;
  
  document.getElementById(id_car_stop).style.left = left_current + "px"; 
//////////////////////code anh cuong
var add_plc=true;
var abc=1;
var h=0;
function nham()
{
  

{ 
   



}

}


var setInterval_id=setInterval(dem_add_plc,2000); 
    function dem_add_plc()
          {
            if (add_plc==true&&abc==1) 
              {
                h++;
                console.log(h);
                abc=2; 
              }
            else(add_plc==false)
            

          }

setInterval(() =>nham(),100);

function doiso()
{
  add_plc=false;
  console.log(add_plc);
}

function doiso2()
{
  add_plc=true;
  console.log(add_plc);
  abc=1;
}


